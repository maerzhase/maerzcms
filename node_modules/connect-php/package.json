{
  "name": "connect-php",
  "version": "0.0.1",
  "main": "lib/connect-php.js",
  "description": "PHP middleware for https://github.com/senchalabs/connect",
  "homepage": "https://github.com/ddprrt/connect-php",
  "bugs": {
    "url": "https://github.com/ddprrt/connect-php/issues"
  },
  "author": {
    "name": "Stefan Baumgartner",
    "email": "sbaumg@gmail.com",
    "url": "http://www.fettblog.eu"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/ddprrt/connect-php"
  },
  "keywords": [
    "connect",
    "php",
    "middleware"
  ],
  "licenses": [
    {
      "type": "MIT"
    }
  ],
  "devDependencies": {
    "grunt-contrib-jshint": "~0.6.0",
    "grunt-contrib-watch": "~0.5.0"
  },
  "readme": "# connect-php [![Build Status](https://secure.travis-ci.org/ddprrt/connect-php.png?branch=master)](http://travis-ci.org/ddprrt/connect-php)\n\nPHP middleware for https://github.com/senchalabs/connect\n\n## Disclaimer\n\nThis plugin is a very early stage, and was primarily designed to provide a better PHP integration with [`grunt-contrib-connect`](https://github.com/gruntjs/grunt-contrib-connect). So for now, it was only tested with Grunt on a rather basic test set.\n\nIts main goal is to parse and execute `.php` files whenever a request to such a file is made.\n\n## Getting Started\nInstall the module with: `npm install connect-php`\n\n## Using it with [Grunt](http://gruntjs.com/)\n\n`grunt-contrib-connect` at the moment is very tight in it's execution and has no way to easily add another middleware to its execution stack as it was possible with `grunt-connect`. However, it is still possible to override the usually used `middleware` function. So, to just execute `.php` files we can easily set it up like this:\n\n```javascript\nmodule.exports = function (grunt) {\n    // show elapsed time at the end\n    require('time-grunt')(grunt);\n\n    // load all grunt tasks\n    require('load-grunt-tasks')(grunt);\n\n    //Add this to the beginning of your Gruntfile.js\n    var phpMiddleware = require('connect-php');\n\n    grunt.initConfig({\n        ...\n        connect: {\n            options: {\n                port: 9000,\n                livereload: 35729,\n                hostname: 'localhost',\n                middleware: function(connect, options) {\n                    // The directory where connect is executed\n                    var directory = options.directory \n                      || options.base[options.base.length - 1];\n                    // Return an array of all middlewares\n                    return [\n                        phpMiddleware(directory)\n                    ]\n                }\n            },\n            ...\n        }\n    });\n};\n```\n\nTo sneak in our middleware into `grunt-contrib-connect`'s original middleware stack, we have to recreate a good chunk of their implementation. Add this to the middleware part described above:\n\n```javascript\n...\nmiddleware: function(connect, options) {\n    var middlewares = [];\n    var directory = options.directory || options.base[options.base.length - 1];\n    if (!Array.isArray(options.base)) {\n        options.base = [options.base];\n    }\n    \n    // Magic happens here\n    middlewars.push(phpMiddleware(directory));\n\n    options.base.forEach(function(base) {\n        // Serve static files.\n        middlewares.push(connect.static(base));\n    });\n\n    // Make directory browse-able.\n    middlewares.push(connect.directory(directory));\n    return middlewares;\n}\n...\n```\n\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\n\n## Release History\n\n* 0.0.1 - very early, initial release\n\n## Requirements\n\n* [connect](https://github.com/senchalabs/connect) 2.7.11\n* PHP 5.4.0\n\n## License\nCopyright (c) 2013 Stefan Baumgartner. Licensed under the MIT license.\n",
  "readmeFilename": "README.md",
  "_id": "connect-php@0.0.1",
  "dist": {
    "shasum": "3f013b28881a85eaba60f74c6677203bdf3db51c",
    "tarball": "http://registry.npmjs.org/connect-php/-/connect-php-0.0.1.tgz"
  },
  "_from": "connect-php@*",
  "_resolved": "https://registry.npmjs.org/connect-php/-/connect-php-0.0.1.tgz",
  "scripts": {},
  "_npmVersion": "1.3.14",
  "_npmUser": {
    "name": "ddprrt",
    "email": "sbaumg@gmail.com"
  },
  "maintainers": [
    {
      "name": "ddprrt",
      "email": "sbaumg@gmail.com"
    }
  ],
  "directories": {},
  "_shasum": "3f013b28881a85eaba60f74c6677203bdf3db51c"
}
